// <auto-generated />
using System;
using Foodordering.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Foodordering.Migrations
{
    [DbContext(typeof(Foodorderingdbcontext))]
    [Migration("20210914110503_ordertableadded")]
    partial class ordertableadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Foodordering.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Foodordering.Models.FoodItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isVeg")
                        .HasColumnType("bit");

                    b.Property<int>("mealType")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("FoodItem");

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "This is cheese pizza",
                            img_url = "C:\\Users\\Vishakha.Karimungi\\OneDrive - MINDBODY, Inc\\Documents\\Food_images",
                            isVeg = true,
                            mealType = 1,
                            name = "pizza",
                            price = 499.0
                        },
                        new
                        {
                            id = 2,
                            description = "This is cheese burger",
                            isVeg = true,
                            mealType = 2,
                            name = "burger",
                            price = 199.0
                        });
                });

            modelBuilder.Entity("Foodordering.Models.MealType", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealId");

                    b.ToTable("MealTypes");

                    b.HasData(
                        new
                        {
                            MealId = 1,
                            Description = "",
                            MealName = "BRUNCH"
                        },
                        new
                        {
                            MealId = 2,
                            Description = "",
                            MealName = "ELEVENSES"
                        },
                        new
                        {
                            MealId = 3,
                            Description = "",
                            MealName = "LUNCH"
                        },
                        new
                        {
                            MealId = 4,
                            Description = "",
                            MealName = "DINNER"
                        },
                        new
                        {
                            MealId = 5,
                            Description = "",
                            MealName = "SUPPER"
                        },
                        new
                        {
                            MealId = 6,
                            Description = "",
                            MealName = "AFTERNOON_TEA"
                        },
                        new
                        {
                            MealId = 7,
                            Description = "",
                            MealName = "HIGH_TEA"
                        });
                });

            modelBuilder.Entity("Foodordering.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Foodordering.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("itemid")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("itemid");

                    b.ToTable("ShoppingCartItem");
                });

            modelBuilder.Entity("Foodordering.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("phoneno")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Foodordering.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("Foodordering.Models.FoodItem", "item")
                        .WithMany()
                        .HasForeignKey("itemid");

                    b.Navigation("item");
                });

            modelBuilder.Entity("Foodordering.Models.User", b =>
                {
                    b.HasOne("Foodordering.Models.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.Navigation("address");
                });
#pragma warning restore 612, 618
        }
    }
}
